{"version":3,"file":"static/js/224.b75c9982.chunk.js","mappings":"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","sources":["services/events/findEventInStorage.ts","pages/Details/styles.ts","pages/Details/components/List/index.tsx","services/events/updateParticipant.ts","pages/Details/index.tsx","services/events/updateEventInStorage.ts","services/events/getParsedStorage.ts","services/events/setStorage.ts"],"sourcesContent":["import { IEvent } from 'shared/types/event'\n\nimport { getParsedStorage } from './getParsedStorage'\n\nexport const findEventInStorage = (id: number): IEvent => {\n  const parsedStorage = getParsedStorage()\n\n  const filter = parsedStorage.filter((item: IEvent) => item.id === id)\n\n  return filter[0]\n}\n","import styled, { css } from 'styled-components'\n\nexport const Wrapper = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n    .w__controls {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      flex-wrap: wrap;\n      gap: 1rem;\n    }\n\n    .w__page {\n      display: flex;\n      flex-direction: column;\n      gap: 5rem;\n\n      padding: 5rem;\n      background-color: ${theme.colors.shape};\n      border-radius: 0.2rem;\n      box-shadow: ${theme.shadows.default};\n\n      .wp__header {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        grid-auto-rows: auto;\n        justify-content: space-between;\n        gap: 2rem;\n\n        .wph__date {\n          font-size: 2.8rem;\n          font-weight: 800;\n        }\n\n        .wph__title {\n          font-size: 3.6rem;\n          font-weight: 700;\n        }\n\n        .wph__guests,\n        .wph__money {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n\n          font-size: 2.1rem;\n          font-weight: 500;\n        }\n\n        .wph__additional-information {\n          padding: 2rem;\n          border-left: 0.4rem solid ${theme.colors.text};\n          color: ${theme.colors.text};\n        }\n      }\n    }\n\n    .wm__form {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      gap: 5rem;\n\n      width: 100%;\n\n      .wmf__money {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n\n        width: 100%;\n      }\n    }\n  `}\n`\n\nexport const List = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n\n    border-radius: 0.2rem;\n\n    .l__row {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 2rem;\n\n      padding: 2rem 1rem;\n      border-bottom: 2px solid ${theme.colors.primary};\n      transition: ${theme.transitions.default};\n\n      &:hover {\n        background-color: ${theme.colors.darkShape};\n      }\n\n      &--checked {\n        .lr__right {\n          text-decoration: line-through;\n        }\n      }\n\n      .lr__left {\n        display: flex;\n        align-items: center;\n        gap: 2rem;\n      }\n\n      .lr__right {\n        font-size: 2.1rem;\n        font-weight: 700;\n      }\n    }\n  `}\n`\n","import { MdLocalDrink } from 'react-icons/md'\n\nimport { IEvent, IParticipant } from 'shared/types'\n\nimport { updatePartcipant } from 'services/events'\n\nimport { formatAmount } from 'utils'\n\nimport { Checkbox } from 'components'\n\nimport * as S from 'pages/Details/styles'\n\ninterface IListProps {\n  eventId: number\n  participants?: IParticipant[]\n  onParticipantUpdate: (event: IEvent) => void\n}\n\nconst List = ({\n  eventId,\n  participants,\n  onParticipantUpdate\n}: IListProps): React.ReactElement => {\n  return (\n    <S.List>\n      {!participants || participants.length === 0 ? (\n        <span>Nenhum participante adicionado ainda :(</span>\n      ) : (\n        participants.map((participant) => (\n          <div\n            key={participant.id}\n            className={`l__row ${participant.paid ? 'l__row--checked' : ''}`}\n            onClick={() => {\n              onParticipantUpdate(\n                updatePartcipant(eventId, {\n                  ...participant,\n                  paid: !participant.paid\n                })\n              )\n            }}\n          >\n            <div className=\"lr__left\">\n              <Checkbox\n                label={participant.name}\n                checked={participant.paid}\n                readOnly\n              />\n              {participant.includeDrink && <MdLocalDrink />}\n            </div>\n\n            <span className=\"lr__right\">\n              {formatAmount(participant.amount / 100)}\n            </span>\n          </div>\n        ))\n      )}\n    </S.List>\n  )\n}\n\nexport default List\n","import { IEvent, IParticipant } from 'shared/types/event'\n\nimport { findEventInStorage } from './findEventInStorage'\n\nexport const updatePartcipant = (\n  eventId: number,\n  participant: IParticipant\n) => {\n  const event = findEventInStorage(eventId)\n\n  const finalEventParticipants = event.participants.map((eventParticipant) => {\n    if (eventParticipant.id === participant.id) return { ...participant }\n\n    return eventParticipant\n  })\n\n  return {\n    ...event,\n    value: finalEventParticipants\n      .filter((participant) => participant.paid)\n      .map((participant) => participant.amount)\n      .reduce((total, value) => total + value, 0),\n    participants: finalEventParticipants\n  } as IEvent\n}\n","import { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form'\nimport { format } from 'date-fns'\nimport { toast } from 'react-toastify'\nimport { MdKeyboardReturn, MdAdd, MdCheck } from 'react-icons/md'\n\nimport { IEvent } from 'shared/types'\n\nimport { findEventInStorage, updateEventInStorage } from 'services/events'\n\nimport { formatAmount } from 'utils'\n\nimport { Button, Modal, Input, Checkbox, CurrencyInput } from 'components'\n\nimport List from './components/List'\n\nimport icon_guests from 'assets/icon_guests.svg'\nimport icon_money from 'assets/icon_money.svg'\n\nimport * as S from './styles'\n\ntype RegisterParticipantInputs = {\n  name: string\n}\n\nconst Details = (): React.ReactElement => {\n  const params = useParams()\n  const navigate = useNavigate()\n\n  const [event, setEvent] = useState<IEvent>(\n    findEventInStorage(parseInt(params.id ?? ''))\n  )\n\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n  const [currencyValue, setCurrencyValue] = useState(0)\n  const [includeDrink, setIncludeDrink] = useState(false)\n\n  useEffect(() => {\n    updateEventInStorage(event)\n  }, [event])\n\n  const {\n    handleSubmit,\n    control,\n    formState: { isDirty }\n  } = useForm<RegisterParticipantInputs>({\n    defaultValues: {\n      name: ''\n    }\n  })\n\n  const onSubmit: SubmitHandler<RegisterParticipantInputs> = ({ name }) => {\n    const participantValue = includeDrink\n      ? (currencyValue + 20) * 100\n      : currencyValue * 100\n\n    setEvent({\n      ...event,\n      participants: [\n        ...event.participants,\n        {\n          id: Math.round(Math.random() * 10000),\n          name,\n          amount: participantValue,\n          includeDrink: includeDrink,\n          paid: false\n        }\n      ]\n    })\n\n    setModalIsOpen(false)\n    toast.success('participante adicionado com sucesso!')\n  }\n\n  return (\n    <S.Wrapper>\n      <div className=\"w__controls\">\n        <Button icon={<MdKeyboardReturn />} onClick={() => navigate('/')}>\n          Voltar\n        </Button>\n      </div>\n\n      <div className=\"w__page\">\n        <div className=\"wp__header\">\n          <span className=\"wph__date\">\n            {format(new Date(event.date), 'dd/MM')}\n          </span>\n\n          <span className=\"wph__guests\">\n            <img src={icon_guests} alt=\"Ícone de convidados\" />\n\n            {event.participants?.length ?? 0}\n          </span>\n\n          <h1 className=\"wph__title\">{event.title}</h1>\n\n          <span className=\"wph__money\">\n            <img src={icon_money} alt=\"Ícone cifrão\" />\n            {formatAmount(event.value / 100)}\n          </span>\n\n          <div className=\"wph__additional-information\">\n            {event.additionalInfo}\n          </div>\n        </div>\n\n        <div className=\"wp__list\">\n          <List\n            eventId={event.id}\n            participants={event.participants}\n            onParticipantUpdate={(eventObject) => setEvent(eventObject)}\n          />\n        </div>\n\n        <Button fullWidth icon={<MdAdd />} onClick={() => setModalIsOpen(true)}>\n          Adicionar Participante\n        </Button>\n      </div>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onClose={() => setModalIsOpen(false)}\n        modalTitle=\"Adicionar participante\"\n      >\n        <form onSubmit={handleSubmit(onSubmit)} className=\"wm__form\">\n          <Controller\n            name=\"name\"\n            control={control}\n            render={({ field }) => (\n              <Input\n                {...field}\n                label=\"Nome participante\"\n                placeholder=\"Qual o nome da fera?\"\n                autoFocus\n              />\n            )}\n          />\n\n          <div className=\"wmf__money\">\n            <Checkbox\n              checked={includeDrink}\n              onChange={() => setIncludeDrink((prevValue) => !prevValue)}\n              label=\"Incluir bebidas\"\n            />\n\n            <CurrencyInput\n              value={currencyValue * 100}\n              onChange={(value) => setCurrencyValue(parseFloat(value))}\n              label=\"Contribuição\"\n              placeholder=\"Com quanto podemos contar?\"\n            />\n          </div>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            icon={<MdCheck />}\n            disabled={!isDirty}\n          >\n            Confirmar\n          </Button>\n        </form>\n      </Modal>\n    </S.Wrapper>\n  )\n}\n\nexport default Details\n","import { IEvent } from 'shared/types/event'\n\nimport { getParsedStorage } from './getParsedStorage'\nimport { setStorage } from './setStorage'\n\nexport const updateEventInStorage = (event: IEvent) => {\n  const parsedStorage = getParsedStorage()\n\n  const finalStorage = parsedStorage.map((item) => {\n    if (item.id === event.id) return { ...event }\n\n    return item\n  })\n\n  setStorage(finalStorage)\n}\n","import { IEvent } from 'shared/types/event'\n\nexport const getParsedStorage = (): IEvent[] => {\n  !localStorage.getItem('@churras-trinca/events') &&\n    localStorage.setItem('@churras-trinca/events', JSON.stringify([]))\n\n  const storage = localStorage.getItem('@churras-trinca/events')\n\n  const parsedStorage = storage && JSON.parse(storage)\n\n  return parsedStorage\n}\n","import { IEvent } from 'shared/types/event'\n\nexport const setStorage = (array: IEvent[]) => {\n  localStorage.setItem('@churras-trinca/events', JSON.stringify(array))\n}\n"],"names":["findEventInStorage","id","getParsedStorage","filter","item","Wrapper","styled","theme","css","colors","shape","shadows","default","text","List","primary","transitions","darkShape","eventId","participants","onParticipantUpdate","length","map","participant","className","paid","onClick","event","finalEventParticipants","eventParticipant","value","amount","reduce","total","updatePartcipant","label","name","checked","readOnly","includeDrink","formatAmount","params","useParams","navigate","useNavigate","useState","parseInt","setEvent","modalIsOpen","setModalIsOpen","currencyValue","setCurrencyValue","setIncludeDrink","useEffect","finalStorage","setStorage","updateEventInStorage","useForm","defaultValues","handleSubmit","control","isDirty","formState","icon","format","Date","date","src","icon_guests","alt","title","icon_money","additionalInfo","eventObject","fullWidth","isOpen","onClose","modalTitle","onSubmit","participantValue","Math","round","random","toast","render","field","placeholder","autoFocus","onChange","prevValue","parseFloat","type","disabled","localStorage","getItem","setItem","JSON","stringify","storage","parse","array"],"sourceRoot":""}